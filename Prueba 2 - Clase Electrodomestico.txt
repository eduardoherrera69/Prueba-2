
	package prueba2;

/**
* 
* Eduardo Herrera V.
* 17-06-2020
* Clase Electrodomestico
*/

import java.util.Arrays;


Se crea la clase Electrodomestico, de la cual heredarán las clases Lavadora y Television.

public class Electrodomestico {


Se definen los atributos de la clase Electrodoméstico, a saber PrecioBase, color, consumo, peso.
	
	double precioBase;
	String color;
	char consumo;
	double peso;


Se declaran las constantes, ya que son valores fijos que no cambian en el tiempo.


	static final double PRECIO = 100000;
	static final String COLOR = "blanco";
	static final char CONSUMO = 'F';
	static final double PESO = 5;


Se define el constructor por defecto.

/**
* Constructor por defecto 
*/
// constructor por defecto


	public Electrodomestico() {
		precioBase = PRECIO;
		color = COLOR;
		consumo = CONSUMO;
		peso = PESO;
	}



// constructor con precio y peso, el resto por defecto


}
}


/**
* Constructor por defecto parametros double precio, double peso
*/

	public Electrodomestico(double pprecio, double ppeso) {
		precioBase = pprecio;
		peso = ppeso;
		this.color = COLOR;
		this.consumo = CONSUMO;
	}

/**
* Constructor por defecto todos los parametros
*/
	
La finalidad de este constructor es dar la posibilidad de inicializar el objeto con todos sus valores.

		public Electrodomestico(double pprecio, double ppeso, String pcolor, 			char pconsumo) {
		precioBase = pprecio;
		peso = ppeso;
		color = pcolor;
		consumo = pconsumo;
	}

/**
* Metodo get todos los valores
*/

Devuelve los valores indicados en las variables 


	public void getTodo() {
		System.out.println(precioBase);
		System.out.println(peso);
		System.out.println(color);
		System.out.println(consumo);

		return;
	}


















	
/**
* Metodo comprobar consumo energetico
*/


Este método asigna el valor de la potencia asociada a la letra de codigo


		public char comprobarConsumoEnergetico(char letra) {

		String[] consumo = { "A", "B", "C", "D", "E", "F" };

		String letraL = String.valueOf(letra);

		if (Arrays.asList(consumo).contains(letraL)) {
			return letra;
		} else {
			return CONSUMO;
		}
	}



/**
* Metodo comprobar color
*/


Este método comprueba el color asignadio a cada objeto.


		public String comprobarColor(String color) {

		String[] colores = { "negro", "rojo", "azul", "gris" };

		if (Arrays.asList(colores).contains(color)) {
			return color;
		} else {
			return COLOR;
		}
	}

















/**
* Metodo calculo precio final
*/

Este método calcula el precio final del artículo de clase Electrodoméstico.	Se aplicó un switch para elegir las alternativas dadas por el problema

	public double precioFinal() {

		double precioTotal = 0;

		switch (consumo) {
		case 'A':
			precioTotal = precioTotal + 100;
			break;
		case 'B':
			precioTotal = precioTotal + 80;
			break;
		case 'C':
			precioTotal = precioTotal + 60;
			break;
		case 'D':
			precioTotal = precioTotal + 50;
			break;
		case 'E':
			precioTotal = precioTotal + 30;
			break;
		case 'F':
			precioTotal = precioTotal + 10;
			break;
		}


Este if permite optar por una a segunda alternativa de precio, de acuerdo al peso además de la potencia.


		if (peso >= 0 && peso < 19) {
			precioTotal = precioTotal + 10;
		}

		if (peso >= 20 && peso < 49) {
			precioTotal = precioTotal + 50;
		}

		if (peso >= 50 && peso <= 79) {
			precioTotal = precioTotal + 80;
		}

		if (peso >= 80) {
			precioTotal = precioTotal + 100;
		}

		return precioBase + precioTotal;
	}

}
